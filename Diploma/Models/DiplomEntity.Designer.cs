//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("DiplomModel", "FK_Dou_District1", "District", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diploma.Models.District), "Dou", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diploma.Models.Dou), true)]
[assembly: EdmRelationshipAttribute("DiplomModel", "FK_Street_District", "District", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diploma.Models.District), "Street", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diploma.Models.Street), true)]
[assembly: EdmRelationshipAttribute("DiplomModel", "FK_Dou_Street", "Street", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diploma.Models.Street), "Dou", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diploma.Models.Dou), true)]
[assembly: EdmRelationshipAttribute("DiplomModel", "FK_House_Street", "Street", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diploma.Models.Street), "House", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diploma.Models.House), true)]
[assembly: EdmRelationshipAttribute("DiplomModel", "FK_User_Authorization", "Authorization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diploma.Models.Authorization), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diploma.Models.User), true)]
[assembly: EdmRelationshipAttribute("DiplomModel", "FK_User_District", "District", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diploma.Models.District), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diploma.Models.User), true)]
[assembly: EdmRelationshipAttribute("DiplomModel", "FK_DouConnection_Dou", "Dou", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diploma.Models.Dou), "DouConnection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diploma.Models.DouConnection), true)]
[assembly: EdmRelationshipAttribute("DiplomModel", "FK_DouConnection_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diploma.Models.User), "DouConnection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diploma.Models.DouConnection), true)]

#endregion

namespace Diploma.Models
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class DiplomEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект DiplomEntities, используя строку соединения из раздела "DiplomEntities" файла конфигурации приложения.
        /// </summary>
        public DiplomEntities() : base("name=DiplomEntities", "DiplomEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта DiplomEntities.
        /// </summary>
        public DiplomEntities(string connectionString) : base(connectionString, "DiplomEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта DiplomEntities.
        /// </summary>
        public DiplomEntities(EntityConnection connection) : base(connection, "DiplomEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Authorization> Authorization
        {
            get
            {
                if ((_Authorization == null))
                {
                    _Authorization = base.CreateObjectSet<Authorization>("Authorization");
                }
                return _Authorization;
            }
        }
        private ObjectSet<Authorization> _Authorization;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<District> District
        {
            get
            {
                if ((_District == null))
                {
                    _District = base.CreateObjectSet<District>("District");
                }
                return _District;
            }
        }
        private ObjectSet<District> _District;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Dou> Dou
        {
            get
            {
                if ((_Dou == null))
                {
                    _Dou = base.CreateObjectSet<Dou>("Dou");
                }
                return _Dou;
            }
        }
        private ObjectSet<Dou> _Dou;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<House> House
        {
            get
            {
                if ((_House == null))
                {
                    _House = base.CreateObjectSet<House>("House");
                }
                return _House;
            }
        }
        private ObjectSet<House> _House;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Street> Street
        {
            get
            {
                if ((_Street == null))
                {
                    _Street = base.CreateObjectSet<Street>("Street");
                }
                return _Street;
            }
        }
        private ObjectSet<Street> _Street;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<DouConnection> DouConnection
        {
            get
            {
                if ((_DouConnection == null))
                {
                    _DouConnection = base.CreateObjectSet<DouConnection>("DouConnection");
                }
                return _DouConnection;
            }
        }
        private ObjectSet<DouConnection> _DouConnection;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Authorization. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAuthorization(Authorization authorization)
        {
            base.AddObject("Authorization", authorization);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet District. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDistrict(District district)
        {
            base.AddObject("District", district);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Dou. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDou(Dou dou)
        {
            base.AddObject("Dou", dou);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet House. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToHouse(House house)
        {
            base.AddObject("House", house);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Street. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToStreet(Street street)
        {
            base.AddObject("Street", street);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet DouConnection. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDouConnection(DouConnection douConnection)
        {
            base.AddObject("DouConnection", douConnection);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet User. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DiplomModel", Name="Authorization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Authorization : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Authorization.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="email">Исходное значение свойства email.</param>
        /// <param name="pass">Исходное значение свойства pass.</param>
        /// <param name="first_name">Исходное значение свойства first_name.</param>
        /// <param name="last_name">Исходное значение свойства last_name.</param>
        public static Authorization CreateAuthorization(global::System.Int32 id, global::System.String email, global::System.String pass, global::System.String first_name, global::System.String last_name)
        {
            Authorization authorization = new Authorization();
            authorization.id = id;
            authorization.email = email;
            authorization.pass = pass;
            authorization.first_name = first_name;
            authorization.last_name = last_name;
            return authorization;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pass
        {
            get
            {
                return _pass;
            }
            set
            {
                OnpassChanging(value);
                ReportPropertyChanging("pass");
                _pass = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pass");
                OnpassChanged();
            }
        }
        private global::System.String _pass;
        partial void OnpassChanging(global::System.String value);
        partial void OnpassChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String phone
        {
            get
            {
                return _phone;
            }
            set
            {
                OnphoneChanging(value);
                ReportPropertyChanging("phone");
                _phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("phone");
                OnphoneChanged();
            }
        }
        private global::System.String _phone;
        partial void OnphoneChanging(global::System.String value);
        partial void OnphoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> admin
        {
            get
            {
                return _admin;
            }
            set
            {
                OnadminChanging(value);
                ReportPropertyChanging("admin");
                _admin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("admin");
                OnadminChanged();
            }
        }
        private Nullable<global::System.Boolean> _admin;
        partial void OnadminChanging(Nullable<global::System.Boolean> value);
        partial void OnadminChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiplomModel", "FK_User_Authorization", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("DiplomModel.FK_User_Authorization", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("DiplomModel.FK_User_Authorization", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DiplomModel", Name="District")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class District : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта District.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="district1">Исходное значение свойства district1.</param>
        public static District CreateDistrict(global::System.Int32 id, global::System.String district1)
        {
            District district = new District();
            district.id = id;
            district.district1 = district1;
            return district;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String district1
        {
            get
            {
                return _district1;
            }
            set
            {
                Ondistrict1Changing(value);
                ReportPropertyChanging("district1");
                _district1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("district1");
                Ondistrict1Changed();
            }
        }
        private global::System.String _district1;
        partial void Ondistrict1Changing(global::System.String value);
        partial void Ondistrict1Changed();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiplomModel", "FK_Dou_District1", "Dou")]
        public EntityCollection<Dou> Dou
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dou>("DiplomModel.FK_Dou_District1", "Dou");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dou>("DiplomModel.FK_Dou_District1", "Dou", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiplomModel", "FK_Street_District", "Street")]
        public EntityCollection<Street> Street
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Street>("DiplomModel.FK_Street_District", "Street");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Street>("DiplomModel.FK_Street_District", "Street", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiplomModel", "FK_User_District", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("DiplomModel.FK_User_District", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("DiplomModel.FK_User_District", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DiplomModel", Name="Dou")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dou : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Dou.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="dou_name">Исходное значение свойства dou_name.</param>
        /// <param name="dou_district">Исходное значение свойства dou_district.</param>
        /// <param name="dou_street">Исходное значение свойства dou_street.</param>
        /// <param name="dou_house">Исходное значение свойства dou_house.</param>
        /// <param name="dou_group01">Исходное значение свойства dou_group01.</param>
        /// <param name="dou_group12">Исходное значение свойства dou_group12.</param>
        /// <param name="dou_group23">Исходное значение свойства dou_group23.</param>
        /// <param name="dou_group34">Исходное значение свойства dou_group34.</param>
        /// <param name="dou_group45">Исходное значение свойства dou_group45.</param>
        /// <param name="dou_group56">Исходное значение свойства dou_group56.</param>
        /// <param name="dou_group67">Исходное значение свойства dou_group67.</param>
        public static Dou CreateDou(global::System.Int32 id, global::System.String dou_name, global::System.Int32 dou_district, global::System.Int32 dou_street, global::System.Int32 dou_house, global::System.Int32 dou_group01, global::System.Int32 dou_group12, global::System.Int32 dou_group23, global::System.Int32 dou_group34, global::System.Int32 dou_group45, global::System.Int32 dou_group56, global::System.Int32 dou_group67)
        {
            Dou dou = new Dou();
            dou.id = id;
            dou.dou_name = dou_name;
            dou.dou_district = dou_district;
            dou.dou_street = dou_street;
            dou.dou_house = dou_house;
            dou.dou_group01 = dou_group01;
            dou.dou_group12 = dou_group12;
            dou.dou_group23 = dou_group23;
            dou.dou_group34 = dou_group34;
            dou.dou_group45 = dou_group45;
            dou.dou_group56 = dou_group56;
            dou.dou_group67 = dou_group67;
            return dou;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dou_name
        {
            get
            {
                return _dou_name;
            }
            set
            {
                Ondou_nameChanging(value);
                ReportPropertyChanging("dou_name");
                _dou_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("dou_name");
                Ondou_nameChanged();
            }
        }
        private global::System.String _dou_name;
        partial void Ondou_nameChanging(global::System.String value);
        partial void Ondou_nameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dou_district
        {
            get
            {
                return _dou_district;
            }
            set
            {
                Ondou_districtChanging(value);
                ReportPropertyChanging("dou_district");
                _dou_district = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dou_district");
                Ondou_districtChanged();
            }
        }
        private global::System.Int32 _dou_district;
        partial void Ondou_districtChanging(global::System.Int32 value);
        partial void Ondou_districtChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dou_street
        {
            get
            {
                return _dou_street;
            }
            set
            {
                Ondou_streetChanging(value);
                ReportPropertyChanging("dou_street");
                _dou_street = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dou_street");
                Ondou_streetChanged();
            }
        }
        private global::System.Int32 _dou_street;
        partial void Ondou_streetChanging(global::System.Int32 value);
        partial void Ondou_streetChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dou_house
        {
            get
            {
                return _dou_house;
            }
            set
            {
                Ondou_houseChanging(value);
                ReportPropertyChanging("dou_house");
                _dou_house = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dou_house");
                Ondou_houseChanged();
            }
        }
        private global::System.Int32 _dou_house;
        partial void Ondou_houseChanging(global::System.Int32 value);
        partial void Ondou_houseChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dou_group01
        {
            get
            {
                return _dou_group01;
            }
            set
            {
                Ondou_group01Changing(value);
                ReportPropertyChanging("dou_group01");
                _dou_group01 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dou_group01");
                Ondou_group01Changed();
            }
        }
        private global::System.Int32 _dou_group01;
        partial void Ondou_group01Changing(global::System.Int32 value);
        partial void Ondou_group01Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dou_group12
        {
            get
            {
                return _dou_group12;
            }
            set
            {
                Ondou_group12Changing(value);
                ReportPropertyChanging("dou_group12");
                _dou_group12 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dou_group12");
                Ondou_group12Changed();
            }
        }
        private global::System.Int32 _dou_group12;
        partial void Ondou_group12Changing(global::System.Int32 value);
        partial void Ondou_group12Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dou_group23
        {
            get
            {
                return _dou_group23;
            }
            set
            {
                Ondou_group23Changing(value);
                ReportPropertyChanging("dou_group23");
                _dou_group23 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dou_group23");
                Ondou_group23Changed();
            }
        }
        private global::System.Int32 _dou_group23;
        partial void Ondou_group23Changing(global::System.Int32 value);
        partial void Ondou_group23Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dou_group34
        {
            get
            {
                return _dou_group34;
            }
            set
            {
                Ondou_group34Changing(value);
                ReportPropertyChanging("dou_group34");
                _dou_group34 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dou_group34");
                Ondou_group34Changed();
            }
        }
        private global::System.Int32 _dou_group34;
        partial void Ondou_group34Changing(global::System.Int32 value);
        partial void Ondou_group34Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dou_group45
        {
            get
            {
                return _dou_group45;
            }
            set
            {
                Ondou_group45Changing(value);
                ReportPropertyChanging("dou_group45");
                _dou_group45 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dou_group45");
                Ondou_group45Changed();
            }
        }
        private global::System.Int32 _dou_group45;
        partial void Ondou_group45Changing(global::System.Int32 value);
        partial void Ondou_group45Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dou_group56
        {
            get
            {
                return _dou_group56;
            }
            set
            {
                Ondou_group56Changing(value);
                ReportPropertyChanging("dou_group56");
                _dou_group56 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dou_group56");
                Ondou_group56Changed();
            }
        }
        private global::System.Int32 _dou_group56;
        partial void Ondou_group56Changing(global::System.Int32 value);
        partial void Ondou_group56Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dou_group67
        {
            get
            {
                return _dou_group67;
            }
            set
            {
                Ondou_group67Changing(value);
                ReportPropertyChanging("dou_group67");
                _dou_group67 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dou_group67");
                Ondou_group67Changed();
            }
        }
        private global::System.Int32 _dou_group67;
        partial void Ondou_group67Changing(global::System.Int32 value);
        partial void Ondou_group67Changed();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiplomModel", "FK_Dou_District1", "District")]
        public District District
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("DiplomModel.FK_Dou_District1", "District").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("DiplomModel.FK_Dou_District1", "District").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<District> DistrictReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("DiplomModel.FK_Dou_District1", "District");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<District>("DiplomModel.FK_Dou_District1", "District", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiplomModel", "FK_Dou_Street", "Street")]
        public Street Street
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Street>("DiplomModel.FK_Dou_Street", "Street").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Street>("DiplomModel.FK_Dou_Street", "Street").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Street> StreetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Street>("DiplomModel.FK_Dou_Street", "Street");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Street>("DiplomModel.FK_Dou_Street", "Street", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiplomModel", "FK_DouConnection_Dou", "DouConnection")]
        public EntityCollection<DouConnection> DouConnection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DouConnection>("DiplomModel.FK_DouConnection_Dou", "DouConnection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DouConnection>("DiplomModel.FK_DouConnection_Dou", "DouConnection", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DiplomModel", Name="DouConnection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DouConnection : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта DouConnection.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="douid">Исходное значение свойства douid.</param>
        /// <param name="userid">Исходное значение свойства userid.</param>
        /// <param name="dou_user_rate">Исходное значение свойства dou_user_rate.</param>
        /// <param name="status">Исходное значение свойства status.</param>
        public static DouConnection CreateDouConnection(global::System.Int32 id, global::System.Int32 douid, global::System.Int32 userid, global::System.Double dou_user_rate, global::System.Int32 status)
        {
            DouConnection douConnection = new DouConnection();
            douConnection.id = id;
            douConnection.douid = douid;
            douConnection.userid = userid;
            douConnection.dou_user_rate = dou_user_rate;
            douConnection.status = status;
            return douConnection;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 douid
        {
            get
            {
                return _douid;
            }
            set
            {
                OndouidChanging(value);
                ReportPropertyChanging("douid");
                _douid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("douid");
                OndouidChanged();
            }
        }
        private global::System.Int32 _douid;
        partial void OndouidChanging(global::System.Int32 value);
        partial void OndouidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userid
        {
            get
            {
                return _userid;
            }
            set
            {
                OnuseridChanging(value);
                ReportPropertyChanging("userid");
                _userid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userid");
                OnuseridChanged();
            }
        }
        private global::System.Int32 _userid;
        partial void OnuseridChanging(global::System.Int32 value);
        partial void OnuseridChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double dou_user_rate
        {
            get
            {
                return _dou_user_rate;
            }
            set
            {
                Ondou_user_rateChanging(value);
                ReportPropertyChanging("dou_user_rate");
                _dou_user_rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dou_user_rate");
                Ondou_user_rateChanged();
            }
        }
        private global::System.Double _dou_user_rate;
        partial void Ondou_user_rateChanging(global::System.Double value);
        partial void Ondou_user_rateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.Int32 _status;
        partial void OnstatusChanging(global::System.Int32 value);
        partial void OnstatusChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiplomModel", "FK_DouConnection_Dou", "Dou")]
        public Dou Dou
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dou>("DiplomModel.FK_DouConnection_Dou", "Dou").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dou>("DiplomModel.FK_DouConnection_Dou", "Dou").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dou> DouReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dou>("DiplomModel.FK_DouConnection_Dou", "Dou");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dou>("DiplomModel.FK_DouConnection_Dou", "Dou", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiplomModel", "FK_DouConnection_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DiplomModel.FK_DouConnection_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DiplomModel.FK_DouConnection_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DiplomModel.FK_DouConnection_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DiplomModel.FK_DouConnection_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DiplomModel", Name="House")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class House : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта House.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="num">Исходное значение свойства num.</param>
        /// <param name="streetid">Исходное значение свойства streetid.</param>
        public static House CreateHouse(global::System.Int32 id, global::System.String num, global::System.Int32 streetid)
        {
            House house = new House();
            house.id = id;
            house.num = num;
            house.streetid = streetid;
            return house;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String num
        {
            get
            {
                return _num;
            }
            set
            {
                OnnumChanging(value);
                ReportPropertyChanging("num");
                _num = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("num");
                OnnumChanged();
            }
        }
        private global::System.String _num;
        partial void OnnumChanging(global::System.String value);
        partial void OnnumChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 streetid
        {
            get
            {
                return _streetid;
            }
            set
            {
                OnstreetidChanging(value);
                ReportPropertyChanging("streetid");
                _streetid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("streetid");
                OnstreetidChanged();
            }
        }
        private global::System.Int32 _streetid;
        partial void OnstreetidChanging(global::System.Int32 value);
        partial void OnstreetidChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiplomModel", "FK_House_Street", "Street")]
        public Street Street
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Street>("DiplomModel.FK_House_Street", "Street").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Street>("DiplomModel.FK_House_Street", "Street").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Street> StreetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Street>("DiplomModel.FK_House_Street", "Street");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Street>("DiplomModel.FK_House_Street", "Street", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DiplomModel", Name="Street")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Street : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Street.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="street1">Исходное значение свойства street1.</param>
        /// <param name="districtid">Исходное значение свойства districtid.</param>
        public static Street CreateStreet(global::System.Int32 id, global::System.String street1, global::System.Int32 districtid)
        {
            Street street = new Street();
            street.id = id;
            street.street1 = street1;
            street.districtid = districtid;
            return street;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String street1
        {
            get
            {
                return _street1;
            }
            set
            {
                Onstreet1Changing(value);
                ReportPropertyChanging("street1");
                _street1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("street1");
                Onstreet1Changed();
            }
        }
        private global::System.String _street1;
        partial void Onstreet1Changing(global::System.String value);
        partial void Onstreet1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 districtid
        {
            get
            {
                return _districtid;
            }
            set
            {
                OndistrictidChanging(value);
                ReportPropertyChanging("districtid");
                _districtid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("districtid");
                OndistrictidChanged();
            }
        }
        private global::System.Int32 _districtid;
        partial void OndistrictidChanging(global::System.Int32 value);
        partial void OndistrictidChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiplomModel", "FK_Street_District", "District")]
        public District District
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("DiplomModel.FK_Street_District", "District").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("DiplomModel.FK_Street_District", "District").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<District> DistrictReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("DiplomModel.FK_Street_District", "District");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<District>("DiplomModel.FK_Street_District", "District", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiplomModel", "FK_Dou_Street", "Dou")]
        public EntityCollection<Dou> Dou
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dou>("DiplomModel.FK_Dou_Street", "Dou");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dou>("DiplomModel.FK_Dou_Street", "Dou", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiplomModel", "FK_House_Street", "House")]
        public EntityCollection<House> House
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<House>("DiplomModel.FK_House_Street", "House");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<House>("DiplomModel.FK_House_Street", "House", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DiplomModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта User.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="first_name">Исходное значение свойства first_name.</param>
        /// <param name="last_name">Исходное значение свойства last_name.</param>
        /// <param name="third_name">Исходное значение свойства third_name.</param>
        /// <param name="date_birth">Исходное значение свойства date_birth.</param>
        /// <param name="sex">Исходное значение свойства sex.</param>
        /// <param name="type_doc">Исходное значение свойства type_doc.</param>
        /// <param name="series_doc">Исходное значение свойства series_doc.</param>
        /// <param name="number_doc">Исходное значение свойства number_doc.</param>
        /// <param name="date_issue">Исходное значение свойства date_issue.</param>
        /// <param name="adr_district">Исходное значение свойства adr_district.</param>
        /// <param name="adr_street">Исходное значение свойства adr_street.</param>
        /// <param name="adr_house">Исходное значение свойства adr_house.</param>
        /// <param name="pr_type">Исходное значение свойства pr_type.</param>
        /// <param name="pr_first_name">Исходное значение свойства pr_first_name.</param>
        /// <param name="pr_last_name">Исходное значение свойства pr_last_name.</param>
        /// <param name="pr_third_name">Исходное значение свойства pr_third_name.</param>
        /// <param name="pr_series_doc">Исходное значение свойства pr_series_doc.</param>
        /// <param name="pr_number_doc">Исходное значение свойства pr_number_doc.</param>
        /// <param name="pr_date_issue">Исходное значение свойства pr_date_issue.</param>
        /// <param name="year_enter">Исходное значение свойства year_enter.</param>
        /// <param name="during_year_offer">Исходное значение свойства during_year_offer.</param>
        /// <param name="privilege">Исходное значение свойства privilege.</param>
        /// <param name="time_of_study">Исходное значение свойства time_of_study.</param>
        /// <param name="authid">Исходное значение свойства authid.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String first_name, global::System.String last_name, global::System.String third_name, global::System.DateTime date_birth, global::System.Boolean sex, global::System.String type_doc, global::System.String series_doc, global::System.String number_doc, global::System.DateTime date_issue, global::System.Int32 adr_district, global::System.Int32 adr_street, global::System.Int32 adr_house, global::System.String pr_type, global::System.String pr_first_name, global::System.String pr_last_name, global::System.String pr_third_name, global::System.String pr_series_doc, global::System.String pr_number_doc, global::System.String pr_date_issue, global::System.Int32 year_enter, global::System.Boolean during_year_offer, global::System.Int32 privilege, global::System.Int32 time_of_study, global::System.Int32 authid)
        {
            User user = new User();
            user.id = id;
            user.first_name = first_name;
            user.last_name = last_name;
            user.third_name = third_name;
            user.date_birth = date_birth;
            user.sex = sex;
            user.type_doc = type_doc;
            user.series_doc = series_doc;
            user.number_doc = number_doc;
            user.date_issue = date_issue;
            user.adr_district = adr_district;
            user.adr_street = adr_street;
            user.adr_house = adr_house;
            user.pr_type = pr_type;
            user.pr_first_name = pr_first_name;
            user.pr_last_name = pr_last_name;
            user.pr_third_name = pr_third_name;
            user.pr_series_doc = pr_series_doc;
            user.pr_number_doc = pr_number_doc;
            user.pr_date_issue = pr_date_issue;
            user.year_enter = year_enter;
            user.during_year_offer = during_year_offer;
            user.privilege = privilege;
            user.time_of_study = time_of_study;
            user.authid = authid;
            return user;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String third_name
        {
            get
            {
                return _third_name;
            }
            set
            {
                Onthird_nameChanging(value);
                ReportPropertyChanging("third_name");
                _third_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("third_name");
                Onthird_nameChanged();
            }
        }
        private global::System.String _third_name;
        partial void Onthird_nameChanging(global::System.String value);
        partial void Onthird_nameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_birth
        {
            get
            {
                return _date_birth;
            }
            set
            {
                Ondate_birthChanging(value);
                ReportPropertyChanging("date_birth");
                _date_birth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date_birth");
                Ondate_birthChanged();
            }
        }
        private global::System.DateTime _date_birth;
        partial void Ondate_birthChanging(global::System.DateTime value);
        partial void Ondate_birthChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean sex
        {
            get
            {
                return _sex;
            }
            set
            {
                OnsexChanging(value);
                ReportPropertyChanging("sex");
                _sex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sex");
                OnsexChanged();
            }
        }
        private global::System.Boolean _sex;
        partial void OnsexChanging(global::System.Boolean value);
        partial void OnsexChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type_doc
        {
            get
            {
                return _type_doc;
            }
            set
            {
                Ontype_docChanging(value);
                ReportPropertyChanging("type_doc");
                _type_doc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("type_doc");
                Ontype_docChanged();
            }
        }
        private global::System.String _type_doc;
        partial void Ontype_docChanging(global::System.String value);
        partial void Ontype_docChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String series_doc
        {
            get
            {
                return _series_doc;
            }
            set
            {
                Onseries_docChanging(value);
                ReportPropertyChanging("series_doc");
                _series_doc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("series_doc");
                Onseries_docChanged();
            }
        }
        private global::System.String _series_doc;
        partial void Onseries_docChanging(global::System.String value);
        partial void Onseries_docChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String number_doc
        {
            get
            {
                return _number_doc;
            }
            set
            {
                Onnumber_docChanging(value);
                ReportPropertyChanging("number_doc");
                _number_doc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("number_doc");
                Onnumber_docChanged();
            }
        }
        private global::System.String _number_doc;
        partial void Onnumber_docChanging(global::System.String value);
        partial void Onnumber_docChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_issue
        {
            get
            {
                return _date_issue;
            }
            set
            {
                Ondate_issueChanging(value);
                ReportPropertyChanging("date_issue");
                _date_issue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date_issue");
                Ondate_issueChanged();
            }
        }
        private global::System.DateTime _date_issue;
        partial void Ondate_issueChanging(global::System.DateTime value);
        partial void Ondate_issueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 adr_district
        {
            get
            {
                return _adr_district;
            }
            set
            {
                Onadr_districtChanging(value);
                ReportPropertyChanging("adr_district");
                _adr_district = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("adr_district");
                Onadr_districtChanged();
            }
        }
        private global::System.Int32 _adr_district;
        partial void Onadr_districtChanging(global::System.Int32 value);
        partial void Onadr_districtChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 adr_street
        {
            get
            {
                return _adr_street;
            }
            set
            {
                Onadr_streetChanging(value);
                ReportPropertyChanging("adr_street");
                _adr_street = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("adr_street");
                Onadr_streetChanged();
            }
        }
        private global::System.Int32 _adr_street;
        partial void Onadr_streetChanging(global::System.Int32 value);
        partial void Onadr_streetChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 adr_house
        {
            get
            {
                return _adr_house;
            }
            set
            {
                Onadr_houseChanging(value);
                ReportPropertyChanging("adr_house");
                _adr_house = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("adr_house");
                Onadr_houseChanged();
            }
        }
        private global::System.Int32 _adr_house;
        partial void Onadr_houseChanging(global::System.Int32 value);
        partial void Onadr_houseChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pr_type
        {
            get
            {
                return _pr_type;
            }
            set
            {
                Onpr_typeChanging(value);
                ReportPropertyChanging("pr_type");
                _pr_type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pr_type");
                Onpr_typeChanged();
            }
        }
        private global::System.String _pr_type;
        partial void Onpr_typeChanging(global::System.String value);
        partial void Onpr_typeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pr_first_name
        {
            get
            {
                return _pr_first_name;
            }
            set
            {
                Onpr_first_nameChanging(value);
                ReportPropertyChanging("pr_first_name");
                _pr_first_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pr_first_name");
                Onpr_first_nameChanged();
            }
        }
        private global::System.String _pr_first_name;
        partial void Onpr_first_nameChanging(global::System.String value);
        partial void Onpr_first_nameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pr_last_name
        {
            get
            {
                return _pr_last_name;
            }
            set
            {
                Onpr_last_nameChanging(value);
                ReportPropertyChanging("pr_last_name");
                _pr_last_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pr_last_name");
                Onpr_last_nameChanged();
            }
        }
        private global::System.String _pr_last_name;
        partial void Onpr_last_nameChanging(global::System.String value);
        partial void Onpr_last_nameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pr_third_name
        {
            get
            {
                return _pr_third_name;
            }
            set
            {
                Onpr_third_nameChanging(value);
                ReportPropertyChanging("pr_third_name");
                _pr_third_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pr_third_name");
                Onpr_third_nameChanged();
            }
        }
        private global::System.String _pr_third_name;
        partial void Onpr_third_nameChanging(global::System.String value);
        partial void Onpr_third_nameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pr_series_doc
        {
            get
            {
                return _pr_series_doc;
            }
            set
            {
                Onpr_series_docChanging(value);
                ReportPropertyChanging("pr_series_doc");
                _pr_series_doc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pr_series_doc");
                Onpr_series_docChanged();
            }
        }
        private global::System.String _pr_series_doc;
        partial void Onpr_series_docChanging(global::System.String value);
        partial void Onpr_series_docChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pr_number_doc
        {
            get
            {
                return _pr_number_doc;
            }
            set
            {
                Onpr_number_docChanging(value);
                ReportPropertyChanging("pr_number_doc");
                _pr_number_doc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pr_number_doc");
                Onpr_number_docChanged();
            }
        }
        private global::System.String _pr_number_doc;
        partial void Onpr_number_docChanging(global::System.String value);
        partial void Onpr_number_docChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pr_date_issue
        {
            get
            {
                return _pr_date_issue;
            }
            set
            {
                Onpr_date_issueChanging(value);
                ReportPropertyChanging("pr_date_issue");
                _pr_date_issue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pr_date_issue");
                Onpr_date_issueChanged();
            }
        }
        private global::System.String _pr_date_issue;
        partial void Onpr_date_issueChanging(global::System.String value);
        partial void Onpr_date_issueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 year_enter
        {
            get
            {
                return _year_enter;
            }
            set
            {
                Onyear_enterChanging(value);
                ReportPropertyChanging("year_enter");
                _year_enter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("year_enter");
                Onyear_enterChanged();
            }
        }
        private global::System.Int32 _year_enter;
        partial void Onyear_enterChanging(global::System.Int32 value);
        partial void Onyear_enterChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean during_year_offer
        {
            get
            {
                return _during_year_offer;
            }
            set
            {
                Onduring_year_offerChanging(value);
                ReportPropertyChanging("during_year_offer");
                _during_year_offer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("during_year_offer");
                Onduring_year_offerChanged();
            }
        }
        private global::System.Boolean _during_year_offer;
        partial void Onduring_year_offerChanging(global::System.Boolean value);
        partial void Onduring_year_offerChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 privilege
        {
            get
            {
                return _privilege;
            }
            set
            {
                OnprivilegeChanging(value);
                ReportPropertyChanging("privilege");
                _privilege = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("privilege");
                OnprivilegeChanged();
            }
        }
        private global::System.Int32 _privilege;
        partial void OnprivilegeChanging(global::System.Int32 value);
        partial void OnprivilegeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 time_of_study
        {
            get
            {
                return _time_of_study;
            }
            set
            {
                Ontime_of_studyChanging(value);
                ReportPropertyChanging("time_of_study");
                _time_of_study = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("time_of_study");
                Ontime_of_studyChanged();
            }
        }
        private global::System.Int32 _time_of_study;
        partial void Ontime_of_studyChanging(global::System.Int32 value);
        partial void Ontime_of_studyChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 authid
        {
            get
            {
                return _authid;
            }
            set
            {
                OnauthidChanging(value);
                ReportPropertyChanging("authid");
                _authid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("authid");
                OnauthidChanged();
            }
        }
        private global::System.Int32 _authid;
        partial void OnauthidChanging(global::System.Int32 value);
        partial void OnauthidChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiplomModel", "FK_User_Authorization", "Authorization")]
        public Authorization Authorization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Authorization>("DiplomModel.FK_User_Authorization", "Authorization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Authorization>("DiplomModel.FK_User_Authorization", "Authorization").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Authorization> AuthorizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Authorization>("DiplomModel.FK_User_Authorization", "Authorization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Authorization>("DiplomModel.FK_User_Authorization", "Authorization", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiplomModel", "FK_User_District", "District")]
        public District District
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("DiplomModel.FK_User_District", "District").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("DiplomModel.FK_User_District", "District").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<District> DistrictReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("DiplomModel.FK_User_District", "District");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<District>("DiplomModel.FK_User_District", "District", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiplomModel", "FK_DouConnection_User", "DouConnection")]
        public EntityCollection<DouConnection> DouConnection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DouConnection>("DiplomModel.FK_DouConnection_User", "DouConnection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DouConnection>("DiplomModel.FK_DouConnection_User", "DouConnection", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
